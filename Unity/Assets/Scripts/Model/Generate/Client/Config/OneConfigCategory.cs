
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Collections.Generic;

namespace ET
{
    [Config]
    public partial class OneConfigCategory : Singleton<OneConfigCategory>, IResolveRef
    {
        private readonly Dictionary<long, OneConfig> _dataMap;
        private readonly List<OneConfig> _dataList;

        public OneConfigCategory(ByteBuf _buf)
        {
            _dataMap = new Dictionary<long, OneConfig>();
            _dataList = new List<OneConfig>();

            for (int n = _buf.ReadSize(); n > 0; --n)
            {
                OneConfig _v;
                _v = OneConfig.DeserializeOneConfig(_buf);
                _dataList.Add(_v);
                _dataMap.Add(_v.MaxMatchTime, _v);
            }

            PostInit();
        }

        public Dictionary<long, OneConfig> DataMap => _dataMap;
        public List<OneConfig> DataList => _dataList;

        public OneConfig GetOrDefault(long key) => _dataMap.TryGetValue(key, out var v) ? v : null;
        public OneConfig Get(long key) => _dataMap[key];
        public OneConfig this[long key] => _dataMap[key];
        public void ResolveRef()
        {
            foreach(var _v in _dataList)
            {
                _v.ResolveRef();
            }
        }

        partial void PostInit();
    }
}
